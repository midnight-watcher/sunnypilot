#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_11550028942566401) {
   out_11550028942566401[0] = 0;
   out_11550028942566401[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_11550028942566401[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_11550028942566401[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_11550028942566401[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_11550028942566401[5] = -sin(in_vec[1]);
   out_11550028942566401[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_11550028942566401[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_11550028942566401[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_11550028942566401[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_11550028942566401[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_11550028942566401[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_11550028942566401[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_11550028942566401[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_11550028942566401[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_11550028942566401[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_11550028942566401[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_11550028942566401[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9184767064344944388) {
   out_9184767064344944388[0] = delta_x[0] + nom_x[0];
   out_9184767064344944388[1] = delta_x[1] + nom_x[1];
   out_9184767064344944388[2] = delta_x[2] + nom_x[2];
   out_9184767064344944388[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9184767064344944388[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9184767064344944388[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9184767064344944388[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9184767064344944388[7] = delta_x[6] + nom_x[7];
   out_9184767064344944388[8] = delta_x[7] + nom_x[8];
   out_9184767064344944388[9] = delta_x[8] + nom_x[9];
   out_9184767064344944388[10] = delta_x[9] + nom_x[10];
   out_9184767064344944388[11] = delta_x[10] + nom_x[11];
   out_9184767064344944388[12] = delta_x[11] + nom_x[12];
   out_9184767064344944388[13] = delta_x[12] + nom_x[13];
   out_9184767064344944388[14] = delta_x[13] + nom_x[14];
   out_9184767064344944388[15] = delta_x[14] + nom_x[15];
   out_9184767064344944388[16] = delta_x[15] + nom_x[16];
   out_9184767064344944388[17] = delta_x[16] + nom_x[17];
   out_9184767064344944388[18] = delta_x[17] + nom_x[18];
   out_9184767064344944388[19] = delta_x[18] + nom_x[19];
   out_9184767064344944388[20] = delta_x[19] + nom_x[20];
   out_9184767064344944388[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6119341299857655338) {
   out_6119341299857655338[0] = -nom_x[0] + true_x[0];
   out_6119341299857655338[1] = -nom_x[1] + true_x[1];
   out_6119341299857655338[2] = -nom_x[2] + true_x[2];
   out_6119341299857655338[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6119341299857655338[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6119341299857655338[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6119341299857655338[6] = -nom_x[7] + true_x[7];
   out_6119341299857655338[7] = -nom_x[8] + true_x[8];
   out_6119341299857655338[8] = -nom_x[9] + true_x[9];
   out_6119341299857655338[9] = -nom_x[10] + true_x[10];
   out_6119341299857655338[10] = -nom_x[11] + true_x[11];
   out_6119341299857655338[11] = -nom_x[12] + true_x[12];
   out_6119341299857655338[12] = -nom_x[13] + true_x[13];
   out_6119341299857655338[13] = -nom_x[14] + true_x[14];
   out_6119341299857655338[14] = -nom_x[15] + true_x[15];
   out_6119341299857655338[15] = -nom_x[16] + true_x[16];
   out_6119341299857655338[16] = -nom_x[17] + true_x[17];
   out_6119341299857655338[17] = -nom_x[18] + true_x[18];
   out_6119341299857655338[18] = -nom_x[19] + true_x[19];
   out_6119341299857655338[19] = -nom_x[20] + true_x[20];
   out_6119341299857655338[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2423349688366534848) {
   out_2423349688366534848[0] = 1.0;
   out_2423349688366534848[1] = 0;
   out_2423349688366534848[2] = 0;
   out_2423349688366534848[3] = 0.0;
   out_2423349688366534848[4] = 0.0;
   out_2423349688366534848[5] = 0.0;
   out_2423349688366534848[6] = 0.0;
   out_2423349688366534848[7] = 0.0;
   out_2423349688366534848[8] = 0.0;
   out_2423349688366534848[9] = 0.0;
   out_2423349688366534848[10] = 0.0;
   out_2423349688366534848[11] = 0.0;
   out_2423349688366534848[12] = 0.0;
   out_2423349688366534848[13] = 0.0;
   out_2423349688366534848[14] = 0.0;
   out_2423349688366534848[15] = 0.0;
   out_2423349688366534848[16] = 0.0;
   out_2423349688366534848[17] = 0.0;
   out_2423349688366534848[18] = 0.0;
   out_2423349688366534848[19] = 0.0;
   out_2423349688366534848[20] = 0.0;
   out_2423349688366534848[21] = 0;
   out_2423349688366534848[22] = 1.0;
   out_2423349688366534848[23] = 0;
   out_2423349688366534848[24] = 0.0;
   out_2423349688366534848[25] = 0.0;
   out_2423349688366534848[26] = 0.0;
   out_2423349688366534848[27] = 0.0;
   out_2423349688366534848[28] = 0.0;
   out_2423349688366534848[29] = 0.0;
   out_2423349688366534848[30] = 0.0;
   out_2423349688366534848[31] = 0.0;
   out_2423349688366534848[32] = 0.0;
   out_2423349688366534848[33] = 0.0;
   out_2423349688366534848[34] = 0.0;
   out_2423349688366534848[35] = 0.0;
   out_2423349688366534848[36] = 0.0;
   out_2423349688366534848[37] = 0.0;
   out_2423349688366534848[38] = 0.0;
   out_2423349688366534848[39] = 0.0;
   out_2423349688366534848[40] = 0.0;
   out_2423349688366534848[41] = 0.0;
   out_2423349688366534848[42] = 0;
   out_2423349688366534848[43] = 0;
   out_2423349688366534848[44] = 1.0;
   out_2423349688366534848[45] = 0.0;
   out_2423349688366534848[46] = 0.0;
   out_2423349688366534848[47] = 0.0;
   out_2423349688366534848[48] = 0.0;
   out_2423349688366534848[49] = 0.0;
   out_2423349688366534848[50] = 0.0;
   out_2423349688366534848[51] = 0.0;
   out_2423349688366534848[52] = 0.0;
   out_2423349688366534848[53] = 0.0;
   out_2423349688366534848[54] = 0.0;
   out_2423349688366534848[55] = 0.0;
   out_2423349688366534848[56] = 0.0;
   out_2423349688366534848[57] = 0.0;
   out_2423349688366534848[58] = 0.0;
   out_2423349688366534848[59] = 0.0;
   out_2423349688366534848[60] = 0.0;
   out_2423349688366534848[61] = 0.0;
   out_2423349688366534848[62] = 0.0;
   out_2423349688366534848[63] = 0.0;
   out_2423349688366534848[64] = 0.0;
   out_2423349688366534848[65] = 0.0;
   out_2423349688366534848[66] = -0.5*state[4];
   out_2423349688366534848[67] = -0.5*state[5];
   out_2423349688366534848[68] = -0.5*state[6];
   out_2423349688366534848[69] = 0.0;
   out_2423349688366534848[70] = 0.0;
   out_2423349688366534848[71] = 0.0;
   out_2423349688366534848[72] = 0.0;
   out_2423349688366534848[73] = 0.0;
   out_2423349688366534848[74] = 0.0;
   out_2423349688366534848[75] = 0.0;
   out_2423349688366534848[76] = 0.0;
   out_2423349688366534848[77] = 0.0;
   out_2423349688366534848[78] = 0.0;
   out_2423349688366534848[79] = 0.0;
   out_2423349688366534848[80] = 0.0;
   out_2423349688366534848[81] = 0.0;
   out_2423349688366534848[82] = 0.0;
   out_2423349688366534848[83] = 0.0;
   out_2423349688366534848[84] = 0.0;
   out_2423349688366534848[85] = 0.0;
   out_2423349688366534848[86] = 0.0;
   out_2423349688366534848[87] = 0.5*state[3];
   out_2423349688366534848[88] = 0.5*state[6];
   out_2423349688366534848[89] = -0.5*state[5];
   out_2423349688366534848[90] = 0.0;
   out_2423349688366534848[91] = 0.0;
   out_2423349688366534848[92] = 0.0;
   out_2423349688366534848[93] = 0.0;
   out_2423349688366534848[94] = 0.0;
   out_2423349688366534848[95] = 0.0;
   out_2423349688366534848[96] = 0.0;
   out_2423349688366534848[97] = 0.0;
   out_2423349688366534848[98] = 0.0;
   out_2423349688366534848[99] = 0.0;
   out_2423349688366534848[100] = 0.0;
   out_2423349688366534848[101] = 0.0;
   out_2423349688366534848[102] = 0.0;
   out_2423349688366534848[103] = 0.0;
   out_2423349688366534848[104] = 0.0;
   out_2423349688366534848[105] = 0.0;
   out_2423349688366534848[106] = 0.0;
   out_2423349688366534848[107] = 0.0;
   out_2423349688366534848[108] = -0.5*state[6];
   out_2423349688366534848[109] = 0.5*state[3];
   out_2423349688366534848[110] = 0.5*state[4];
   out_2423349688366534848[111] = 0.0;
   out_2423349688366534848[112] = 0.0;
   out_2423349688366534848[113] = 0.0;
   out_2423349688366534848[114] = 0.0;
   out_2423349688366534848[115] = 0.0;
   out_2423349688366534848[116] = 0.0;
   out_2423349688366534848[117] = 0.0;
   out_2423349688366534848[118] = 0.0;
   out_2423349688366534848[119] = 0.0;
   out_2423349688366534848[120] = 0.0;
   out_2423349688366534848[121] = 0.0;
   out_2423349688366534848[122] = 0.0;
   out_2423349688366534848[123] = 0.0;
   out_2423349688366534848[124] = 0.0;
   out_2423349688366534848[125] = 0.0;
   out_2423349688366534848[126] = 0.0;
   out_2423349688366534848[127] = 0.0;
   out_2423349688366534848[128] = 0.0;
   out_2423349688366534848[129] = 0.5*state[5];
   out_2423349688366534848[130] = -0.5*state[4];
   out_2423349688366534848[131] = 0.5*state[3];
   out_2423349688366534848[132] = 0.0;
   out_2423349688366534848[133] = 0.0;
   out_2423349688366534848[134] = 0.0;
   out_2423349688366534848[135] = 0.0;
   out_2423349688366534848[136] = 0.0;
   out_2423349688366534848[137] = 0.0;
   out_2423349688366534848[138] = 0.0;
   out_2423349688366534848[139] = 0.0;
   out_2423349688366534848[140] = 0.0;
   out_2423349688366534848[141] = 0.0;
   out_2423349688366534848[142] = 0.0;
   out_2423349688366534848[143] = 0.0;
   out_2423349688366534848[144] = 0.0;
   out_2423349688366534848[145] = 0.0;
   out_2423349688366534848[146] = 0.0;
   out_2423349688366534848[147] = 0.0;
   out_2423349688366534848[148] = 0.0;
   out_2423349688366534848[149] = 0.0;
   out_2423349688366534848[150] = 0.0;
   out_2423349688366534848[151] = 0.0;
   out_2423349688366534848[152] = 0.0;
   out_2423349688366534848[153] = 1.0;
   out_2423349688366534848[154] = 0;
   out_2423349688366534848[155] = 0;
   out_2423349688366534848[156] = 0;
   out_2423349688366534848[157] = 0;
   out_2423349688366534848[158] = 0;
   out_2423349688366534848[159] = 0;
   out_2423349688366534848[160] = 0;
   out_2423349688366534848[161] = 0;
   out_2423349688366534848[162] = 0;
   out_2423349688366534848[163] = 0;
   out_2423349688366534848[164] = 0;
   out_2423349688366534848[165] = 0;
   out_2423349688366534848[166] = 0;
   out_2423349688366534848[167] = 0;
   out_2423349688366534848[168] = 0.0;
   out_2423349688366534848[169] = 0.0;
   out_2423349688366534848[170] = 0.0;
   out_2423349688366534848[171] = 0.0;
   out_2423349688366534848[172] = 0.0;
   out_2423349688366534848[173] = 0.0;
   out_2423349688366534848[174] = 0;
   out_2423349688366534848[175] = 1.0;
   out_2423349688366534848[176] = 0;
   out_2423349688366534848[177] = 0;
   out_2423349688366534848[178] = 0;
   out_2423349688366534848[179] = 0;
   out_2423349688366534848[180] = 0;
   out_2423349688366534848[181] = 0;
   out_2423349688366534848[182] = 0;
   out_2423349688366534848[183] = 0;
   out_2423349688366534848[184] = 0;
   out_2423349688366534848[185] = 0;
   out_2423349688366534848[186] = 0;
   out_2423349688366534848[187] = 0;
   out_2423349688366534848[188] = 0;
   out_2423349688366534848[189] = 0.0;
   out_2423349688366534848[190] = 0.0;
   out_2423349688366534848[191] = 0.0;
   out_2423349688366534848[192] = 0.0;
   out_2423349688366534848[193] = 0.0;
   out_2423349688366534848[194] = 0.0;
   out_2423349688366534848[195] = 0;
   out_2423349688366534848[196] = 0;
   out_2423349688366534848[197] = 1.0;
   out_2423349688366534848[198] = 0;
   out_2423349688366534848[199] = 0;
   out_2423349688366534848[200] = 0;
   out_2423349688366534848[201] = 0;
   out_2423349688366534848[202] = 0;
   out_2423349688366534848[203] = 0;
   out_2423349688366534848[204] = 0;
   out_2423349688366534848[205] = 0;
   out_2423349688366534848[206] = 0;
   out_2423349688366534848[207] = 0;
   out_2423349688366534848[208] = 0;
   out_2423349688366534848[209] = 0;
   out_2423349688366534848[210] = 0.0;
   out_2423349688366534848[211] = 0.0;
   out_2423349688366534848[212] = 0.0;
   out_2423349688366534848[213] = 0.0;
   out_2423349688366534848[214] = 0.0;
   out_2423349688366534848[215] = 0.0;
   out_2423349688366534848[216] = 0;
   out_2423349688366534848[217] = 0;
   out_2423349688366534848[218] = 0;
   out_2423349688366534848[219] = 1.0;
   out_2423349688366534848[220] = 0;
   out_2423349688366534848[221] = 0;
   out_2423349688366534848[222] = 0;
   out_2423349688366534848[223] = 0;
   out_2423349688366534848[224] = 0;
   out_2423349688366534848[225] = 0;
   out_2423349688366534848[226] = 0;
   out_2423349688366534848[227] = 0;
   out_2423349688366534848[228] = 0;
   out_2423349688366534848[229] = 0;
   out_2423349688366534848[230] = 0;
   out_2423349688366534848[231] = 0.0;
   out_2423349688366534848[232] = 0.0;
   out_2423349688366534848[233] = 0.0;
   out_2423349688366534848[234] = 0.0;
   out_2423349688366534848[235] = 0.0;
   out_2423349688366534848[236] = 0.0;
   out_2423349688366534848[237] = 0;
   out_2423349688366534848[238] = 0;
   out_2423349688366534848[239] = 0;
   out_2423349688366534848[240] = 0;
   out_2423349688366534848[241] = 1.0;
   out_2423349688366534848[242] = 0;
   out_2423349688366534848[243] = 0;
   out_2423349688366534848[244] = 0;
   out_2423349688366534848[245] = 0;
   out_2423349688366534848[246] = 0;
   out_2423349688366534848[247] = 0;
   out_2423349688366534848[248] = 0;
   out_2423349688366534848[249] = 0;
   out_2423349688366534848[250] = 0;
   out_2423349688366534848[251] = 0;
   out_2423349688366534848[252] = 0.0;
   out_2423349688366534848[253] = 0.0;
   out_2423349688366534848[254] = 0.0;
   out_2423349688366534848[255] = 0.0;
   out_2423349688366534848[256] = 0.0;
   out_2423349688366534848[257] = 0.0;
   out_2423349688366534848[258] = 0;
   out_2423349688366534848[259] = 0;
   out_2423349688366534848[260] = 0;
   out_2423349688366534848[261] = 0;
   out_2423349688366534848[262] = 0;
   out_2423349688366534848[263] = 1.0;
   out_2423349688366534848[264] = 0;
   out_2423349688366534848[265] = 0;
   out_2423349688366534848[266] = 0;
   out_2423349688366534848[267] = 0;
   out_2423349688366534848[268] = 0;
   out_2423349688366534848[269] = 0;
   out_2423349688366534848[270] = 0;
   out_2423349688366534848[271] = 0;
   out_2423349688366534848[272] = 0;
   out_2423349688366534848[273] = 0.0;
   out_2423349688366534848[274] = 0.0;
   out_2423349688366534848[275] = 0.0;
   out_2423349688366534848[276] = 0.0;
   out_2423349688366534848[277] = 0.0;
   out_2423349688366534848[278] = 0.0;
   out_2423349688366534848[279] = 0;
   out_2423349688366534848[280] = 0;
   out_2423349688366534848[281] = 0;
   out_2423349688366534848[282] = 0;
   out_2423349688366534848[283] = 0;
   out_2423349688366534848[284] = 0;
   out_2423349688366534848[285] = 1.0;
   out_2423349688366534848[286] = 0;
   out_2423349688366534848[287] = 0;
   out_2423349688366534848[288] = 0;
   out_2423349688366534848[289] = 0;
   out_2423349688366534848[290] = 0;
   out_2423349688366534848[291] = 0;
   out_2423349688366534848[292] = 0;
   out_2423349688366534848[293] = 0;
   out_2423349688366534848[294] = 0.0;
   out_2423349688366534848[295] = 0.0;
   out_2423349688366534848[296] = 0.0;
   out_2423349688366534848[297] = 0.0;
   out_2423349688366534848[298] = 0.0;
   out_2423349688366534848[299] = 0.0;
   out_2423349688366534848[300] = 0;
   out_2423349688366534848[301] = 0;
   out_2423349688366534848[302] = 0;
   out_2423349688366534848[303] = 0;
   out_2423349688366534848[304] = 0;
   out_2423349688366534848[305] = 0;
   out_2423349688366534848[306] = 0;
   out_2423349688366534848[307] = 1.0;
   out_2423349688366534848[308] = 0;
   out_2423349688366534848[309] = 0;
   out_2423349688366534848[310] = 0;
   out_2423349688366534848[311] = 0;
   out_2423349688366534848[312] = 0;
   out_2423349688366534848[313] = 0;
   out_2423349688366534848[314] = 0;
   out_2423349688366534848[315] = 0.0;
   out_2423349688366534848[316] = 0.0;
   out_2423349688366534848[317] = 0.0;
   out_2423349688366534848[318] = 0.0;
   out_2423349688366534848[319] = 0.0;
   out_2423349688366534848[320] = 0.0;
   out_2423349688366534848[321] = 0;
   out_2423349688366534848[322] = 0;
   out_2423349688366534848[323] = 0;
   out_2423349688366534848[324] = 0;
   out_2423349688366534848[325] = 0;
   out_2423349688366534848[326] = 0;
   out_2423349688366534848[327] = 0;
   out_2423349688366534848[328] = 0;
   out_2423349688366534848[329] = 1.0;
   out_2423349688366534848[330] = 0;
   out_2423349688366534848[331] = 0;
   out_2423349688366534848[332] = 0;
   out_2423349688366534848[333] = 0;
   out_2423349688366534848[334] = 0;
   out_2423349688366534848[335] = 0;
   out_2423349688366534848[336] = 0.0;
   out_2423349688366534848[337] = 0.0;
   out_2423349688366534848[338] = 0.0;
   out_2423349688366534848[339] = 0.0;
   out_2423349688366534848[340] = 0.0;
   out_2423349688366534848[341] = 0.0;
   out_2423349688366534848[342] = 0;
   out_2423349688366534848[343] = 0;
   out_2423349688366534848[344] = 0;
   out_2423349688366534848[345] = 0;
   out_2423349688366534848[346] = 0;
   out_2423349688366534848[347] = 0;
   out_2423349688366534848[348] = 0;
   out_2423349688366534848[349] = 0;
   out_2423349688366534848[350] = 0;
   out_2423349688366534848[351] = 1.0;
   out_2423349688366534848[352] = 0;
   out_2423349688366534848[353] = 0;
   out_2423349688366534848[354] = 0;
   out_2423349688366534848[355] = 0;
   out_2423349688366534848[356] = 0;
   out_2423349688366534848[357] = 0.0;
   out_2423349688366534848[358] = 0.0;
   out_2423349688366534848[359] = 0.0;
   out_2423349688366534848[360] = 0.0;
   out_2423349688366534848[361] = 0.0;
   out_2423349688366534848[362] = 0.0;
   out_2423349688366534848[363] = 0;
   out_2423349688366534848[364] = 0;
   out_2423349688366534848[365] = 0;
   out_2423349688366534848[366] = 0;
   out_2423349688366534848[367] = 0;
   out_2423349688366534848[368] = 0;
   out_2423349688366534848[369] = 0;
   out_2423349688366534848[370] = 0;
   out_2423349688366534848[371] = 0;
   out_2423349688366534848[372] = 0;
   out_2423349688366534848[373] = 1.0;
   out_2423349688366534848[374] = 0;
   out_2423349688366534848[375] = 0;
   out_2423349688366534848[376] = 0;
   out_2423349688366534848[377] = 0;
   out_2423349688366534848[378] = 0.0;
   out_2423349688366534848[379] = 0.0;
   out_2423349688366534848[380] = 0.0;
   out_2423349688366534848[381] = 0.0;
   out_2423349688366534848[382] = 0.0;
   out_2423349688366534848[383] = 0.0;
   out_2423349688366534848[384] = 0;
   out_2423349688366534848[385] = 0;
   out_2423349688366534848[386] = 0;
   out_2423349688366534848[387] = 0;
   out_2423349688366534848[388] = 0;
   out_2423349688366534848[389] = 0;
   out_2423349688366534848[390] = 0;
   out_2423349688366534848[391] = 0;
   out_2423349688366534848[392] = 0;
   out_2423349688366534848[393] = 0;
   out_2423349688366534848[394] = 0;
   out_2423349688366534848[395] = 1.0;
   out_2423349688366534848[396] = 0;
   out_2423349688366534848[397] = 0;
   out_2423349688366534848[398] = 0;
   out_2423349688366534848[399] = 0.0;
   out_2423349688366534848[400] = 0.0;
   out_2423349688366534848[401] = 0.0;
   out_2423349688366534848[402] = 0.0;
   out_2423349688366534848[403] = 0.0;
   out_2423349688366534848[404] = 0.0;
   out_2423349688366534848[405] = 0;
   out_2423349688366534848[406] = 0;
   out_2423349688366534848[407] = 0;
   out_2423349688366534848[408] = 0;
   out_2423349688366534848[409] = 0;
   out_2423349688366534848[410] = 0;
   out_2423349688366534848[411] = 0;
   out_2423349688366534848[412] = 0;
   out_2423349688366534848[413] = 0;
   out_2423349688366534848[414] = 0;
   out_2423349688366534848[415] = 0;
   out_2423349688366534848[416] = 0;
   out_2423349688366534848[417] = 1.0;
   out_2423349688366534848[418] = 0;
   out_2423349688366534848[419] = 0;
   out_2423349688366534848[420] = 0.0;
   out_2423349688366534848[421] = 0.0;
   out_2423349688366534848[422] = 0.0;
   out_2423349688366534848[423] = 0.0;
   out_2423349688366534848[424] = 0.0;
   out_2423349688366534848[425] = 0.0;
   out_2423349688366534848[426] = 0;
   out_2423349688366534848[427] = 0;
   out_2423349688366534848[428] = 0;
   out_2423349688366534848[429] = 0;
   out_2423349688366534848[430] = 0;
   out_2423349688366534848[431] = 0;
   out_2423349688366534848[432] = 0;
   out_2423349688366534848[433] = 0;
   out_2423349688366534848[434] = 0;
   out_2423349688366534848[435] = 0;
   out_2423349688366534848[436] = 0;
   out_2423349688366534848[437] = 0;
   out_2423349688366534848[438] = 0;
   out_2423349688366534848[439] = 1.0;
   out_2423349688366534848[440] = 0;
   out_2423349688366534848[441] = 0.0;
   out_2423349688366534848[442] = 0.0;
   out_2423349688366534848[443] = 0.0;
   out_2423349688366534848[444] = 0.0;
   out_2423349688366534848[445] = 0.0;
   out_2423349688366534848[446] = 0.0;
   out_2423349688366534848[447] = 0;
   out_2423349688366534848[448] = 0;
   out_2423349688366534848[449] = 0;
   out_2423349688366534848[450] = 0;
   out_2423349688366534848[451] = 0;
   out_2423349688366534848[452] = 0;
   out_2423349688366534848[453] = 0;
   out_2423349688366534848[454] = 0;
   out_2423349688366534848[455] = 0;
   out_2423349688366534848[456] = 0;
   out_2423349688366534848[457] = 0;
   out_2423349688366534848[458] = 0;
   out_2423349688366534848[459] = 0;
   out_2423349688366534848[460] = 0;
   out_2423349688366534848[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3286974643845487244) {
   out_3286974643845487244[0] = dt*state[7] + state[0];
   out_3286974643845487244[1] = dt*state[8] + state[1];
   out_3286974643845487244[2] = dt*state[9] + state[2];
   out_3286974643845487244[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3286974643845487244[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3286974643845487244[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3286974643845487244[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3286974643845487244[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3286974643845487244[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3286974643845487244[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3286974643845487244[10] = state[10];
   out_3286974643845487244[11] = state[11];
   out_3286974643845487244[12] = state[12];
   out_3286974643845487244[13] = state[13];
   out_3286974643845487244[14] = state[14];
   out_3286974643845487244[15] = state[15];
   out_3286974643845487244[16] = state[16];
   out_3286974643845487244[17] = state[17];
   out_3286974643845487244[18] = state[18];
   out_3286974643845487244[19] = state[19];
   out_3286974643845487244[20] = state[20];
   out_3286974643845487244[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3900617724921068927) {
   out_3900617724921068927[0] = 1;
   out_3900617724921068927[1] = 0;
   out_3900617724921068927[2] = 0;
   out_3900617724921068927[3] = 0;
   out_3900617724921068927[4] = 0;
   out_3900617724921068927[5] = 0;
   out_3900617724921068927[6] = dt;
   out_3900617724921068927[7] = 0;
   out_3900617724921068927[8] = 0;
   out_3900617724921068927[9] = 0;
   out_3900617724921068927[10] = 0;
   out_3900617724921068927[11] = 0;
   out_3900617724921068927[12] = 0;
   out_3900617724921068927[13] = 0;
   out_3900617724921068927[14] = 0;
   out_3900617724921068927[15] = 0;
   out_3900617724921068927[16] = 0;
   out_3900617724921068927[17] = 0;
   out_3900617724921068927[18] = 0;
   out_3900617724921068927[19] = 0;
   out_3900617724921068927[20] = 0;
   out_3900617724921068927[21] = 0;
   out_3900617724921068927[22] = 1;
   out_3900617724921068927[23] = 0;
   out_3900617724921068927[24] = 0;
   out_3900617724921068927[25] = 0;
   out_3900617724921068927[26] = 0;
   out_3900617724921068927[27] = 0;
   out_3900617724921068927[28] = dt;
   out_3900617724921068927[29] = 0;
   out_3900617724921068927[30] = 0;
   out_3900617724921068927[31] = 0;
   out_3900617724921068927[32] = 0;
   out_3900617724921068927[33] = 0;
   out_3900617724921068927[34] = 0;
   out_3900617724921068927[35] = 0;
   out_3900617724921068927[36] = 0;
   out_3900617724921068927[37] = 0;
   out_3900617724921068927[38] = 0;
   out_3900617724921068927[39] = 0;
   out_3900617724921068927[40] = 0;
   out_3900617724921068927[41] = 0;
   out_3900617724921068927[42] = 0;
   out_3900617724921068927[43] = 0;
   out_3900617724921068927[44] = 1;
   out_3900617724921068927[45] = 0;
   out_3900617724921068927[46] = 0;
   out_3900617724921068927[47] = 0;
   out_3900617724921068927[48] = 0;
   out_3900617724921068927[49] = 0;
   out_3900617724921068927[50] = dt;
   out_3900617724921068927[51] = 0;
   out_3900617724921068927[52] = 0;
   out_3900617724921068927[53] = 0;
   out_3900617724921068927[54] = 0;
   out_3900617724921068927[55] = 0;
   out_3900617724921068927[56] = 0;
   out_3900617724921068927[57] = 0;
   out_3900617724921068927[58] = 0;
   out_3900617724921068927[59] = 0;
   out_3900617724921068927[60] = 0;
   out_3900617724921068927[61] = 0;
   out_3900617724921068927[62] = 0;
   out_3900617724921068927[63] = 0;
   out_3900617724921068927[64] = 0;
   out_3900617724921068927[65] = 0;
   out_3900617724921068927[66] = 1;
   out_3900617724921068927[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3900617724921068927[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3900617724921068927[69] = 0;
   out_3900617724921068927[70] = 0;
   out_3900617724921068927[71] = 0;
   out_3900617724921068927[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3900617724921068927[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3900617724921068927[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3900617724921068927[75] = 0;
   out_3900617724921068927[76] = 0;
   out_3900617724921068927[77] = 0;
   out_3900617724921068927[78] = 0;
   out_3900617724921068927[79] = 0;
   out_3900617724921068927[80] = 0;
   out_3900617724921068927[81] = 0;
   out_3900617724921068927[82] = 0;
   out_3900617724921068927[83] = 0;
   out_3900617724921068927[84] = 0;
   out_3900617724921068927[85] = 0;
   out_3900617724921068927[86] = 0;
   out_3900617724921068927[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3900617724921068927[88] = 1;
   out_3900617724921068927[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3900617724921068927[90] = 0;
   out_3900617724921068927[91] = 0;
   out_3900617724921068927[92] = 0;
   out_3900617724921068927[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3900617724921068927[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3900617724921068927[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3900617724921068927[96] = 0;
   out_3900617724921068927[97] = 0;
   out_3900617724921068927[98] = 0;
   out_3900617724921068927[99] = 0;
   out_3900617724921068927[100] = 0;
   out_3900617724921068927[101] = 0;
   out_3900617724921068927[102] = 0;
   out_3900617724921068927[103] = 0;
   out_3900617724921068927[104] = 0;
   out_3900617724921068927[105] = 0;
   out_3900617724921068927[106] = 0;
   out_3900617724921068927[107] = 0;
   out_3900617724921068927[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3900617724921068927[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3900617724921068927[110] = 1;
   out_3900617724921068927[111] = 0;
   out_3900617724921068927[112] = 0;
   out_3900617724921068927[113] = 0;
   out_3900617724921068927[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3900617724921068927[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3900617724921068927[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3900617724921068927[117] = 0;
   out_3900617724921068927[118] = 0;
   out_3900617724921068927[119] = 0;
   out_3900617724921068927[120] = 0;
   out_3900617724921068927[121] = 0;
   out_3900617724921068927[122] = 0;
   out_3900617724921068927[123] = 0;
   out_3900617724921068927[124] = 0;
   out_3900617724921068927[125] = 0;
   out_3900617724921068927[126] = 0;
   out_3900617724921068927[127] = 0;
   out_3900617724921068927[128] = 0;
   out_3900617724921068927[129] = 0;
   out_3900617724921068927[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3900617724921068927[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3900617724921068927[132] = 1;
   out_3900617724921068927[133] = 0;
   out_3900617724921068927[134] = 0;
   out_3900617724921068927[135] = 0;
   out_3900617724921068927[136] = 0;
   out_3900617724921068927[137] = 0;
   out_3900617724921068927[138] = 0;
   out_3900617724921068927[139] = 0;
   out_3900617724921068927[140] = 0;
   out_3900617724921068927[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3900617724921068927[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3900617724921068927[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3900617724921068927[144] = 0;
   out_3900617724921068927[145] = 0;
   out_3900617724921068927[146] = 0;
   out_3900617724921068927[147] = 0;
   out_3900617724921068927[148] = 0;
   out_3900617724921068927[149] = 0;
   out_3900617724921068927[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3900617724921068927[151] = 0;
   out_3900617724921068927[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3900617724921068927[153] = 0;
   out_3900617724921068927[154] = 1;
   out_3900617724921068927[155] = 0;
   out_3900617724921068927[156] = 0;
   out_3900617724921068927[157] = 0;
   out_3900617724921068927[158] = 0;
   out_3900617724921068927[159] = 0;
   out_3900617724921068927[160] = 0;
   out_3900617724921068927[161] = 0;
   out_3900617724921068927[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3900617724921068927[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3900617724921068927[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3900617724921068927[165] = 0;
   out_3900617724921068927[166] = 0;
   out_3900617724921068927[167] = 0;
   out_3900617724921068927[168] = 0;
   out_3900617724921068927[169] = 0;
   out_3900617724921068927[170] = 0;
   out_3900617724921068927[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3900617724921068927[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3900617724921068927[173] = 0;
   out_3900617724921068927[174] = 0;
   out_3900617724921068927[175] = 0;
   out_3900617724921068927[176] = 1;
   out_3900617724921068927[177] = 0;
   out_3900617724921068927[178] = 0;
   out_3900617724921068927[179] = 0;
   out_3900617724921068927[180] = 0;
   out_3900617724921068927[181] = 0;
   out_3900617724921068927[182] = 0;
   out_3900617724921068927[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3900617724921068927[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3900617724921068927[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3900617724921068927[186] = 0;
   out_3900617724921068927[187] = 0;
   out_3900617724921068927[188] = 0;
   out_3900617724921068927[189] = 0;
   out_3900617724921068927[190] = 0;
   out_3900617724921068927[191] = 0;
   out_3900617724921068927[192] = 0;
   out_3900617724921068927[193] = 0;
   out_3900617724921068927[194] = 0;
   out_3900617724921068927[195] = 0;
   out_3900617724921068927[196] = 0;
   out_3900617724921068927[197] = 0;
   out_3900617724921068927[198] = 1;
   out_3900617724921068927[199] = 0;
   out_3900617724921068927[200] = 0;
   out_3900617724921068927[201] = 0;
   out_3900617724921068927[202] = 0;
   out_3900617724921068927[203] = 0;
   out_3900617724921068927[204] = 0;
   out_3900617724921068927[205] = 0;
   out_3900617724921068927[206] = 0;
   out_3900617724921068927[207] = 0;
   out_3900617724921068927[208] = 0;
   out_3900617724921068927[209] = 0;
   out_3900617724921068927[210] = 0;
   out_3900617724921068927[211] = 0;
   out_3900617724921068927[212] = 0;
   out_3900617724921068927[213] = 0;
   out_3900617724921068927[214] = 0;
   out_3900617724921068927[215] = 0;
   out_3900617724921068927[216] = 0;
   out_3900617724921068927[217] = 0;
   out_3900617724921068927[218] = 0;
   out_3900617724921068927[219] = 0;
   out_3900617724921068927[220] = 1;
   out_3900617724921068927[221] = 0;
   out_3900617724921068927[222] = 0;
   out_3900617724921068927[223] = 0;
   out_3900617724921068927[224] = 0;
   out_3900617724921068927[225] = 0;
   out_3900617724921068927[226] = 0;
   out_3900617724921068927[227] = 0;
   out_3900617724921068927[228] = 0;
   out_3900617724921068927[229] = 0;
   out_3900617724921068927[230] = 0;
   out_3900617724921068927[231] = 0;
   out_3900617724921068927[232] = 0;
   out_3900617724921068927[233] = 0;
   out_3900617724921068927[234] = 0;
   out_3900617724921068927[235] = 0;
   out_3900617724921068927[236] = 0;
   out_3900617724921068927[237] = 0;
   out_3900617724921068927[238] = 0;
   out_3900617724921068927[239] = 0;
   out_3900617724921068927[240] = 0;
   out_3900617724921068927[241] = 0;
   out_3900617724921068927[242] = 1;
   out_3900617724921068927[243] = 0;
   out_3900617724921068927[244] = 0;
   out_3900617724921068927[245] = 0;
   out_3900617724921068927[246] = 0;
   out_3900617724921068927[247] = 0;
   out_3900617724921068927[248] = 0;
   out_3900617724921068927[249] = 0;
   out_3900617724921068927[250] = 0;
   out_3900617724921068927[251] = 0;
   out_3900617724921068927[252] = 0;
   out_3900617724921068927[253] = 0;
   out_3900617724921068927[254] = 0;
   out_3900617724921068927[255] = 0;
   out_3900617724921068927[256] = 0;
   out_3900617724921068927[257] = 0;
   out_3900617724921068927[258] = 0;
   out_3900617724921068927[259] = 0;
   out_3900617724921068927[260] = 0;
   out_3900617724921068927[261] = 0;
   out_3900617724921068927[262] = 0;
   out_3900617724921068927[263] = 0;
   out_3900617724921068927[264] = 1;
   out_3900617724921068927[265] = 0;
   out_3900617724921068927[266] = 0;
   out_3900617724921068927[267] = 0;
   out_3900617724921068927[268] = 0;
   out_3900617724921068927[269] = 0;
   out_3900617724921068927[270] = 0;
   out_3900617724921068927[271] = 0;
   out_3900617724921068927[272] = 0;
   out_3900617724921068927[273] = 0;
   out_3900617724921068927[274] = 0;
   out_3900617724921068927[275] = 0;
   out_3900617724921068927[276] = 0;
   out_3900617724921068927[277] = 0;
   out_3900617724921068927[278] = 0;
   out_3900617724921068927[279] = 0;
   out_3900617724921068927[280] = 0;
   out_3900617724921068927[281] = 0;
   out_3900617724921068927[282] = 0;
   out_3900617724921068927[283] = 0;
   out_3900617724921068927[284] = 0;
   out_3900617724921068927[285] = 0;
   out_3900617724921068927[286] = 1;
   out_3900617724921068927[287] = 0;
   out_3900617724921068927[288] = 0;
   out_3900617724921068927[289] = 0;
   out_3900617724921068927[290] = 0;
   out_3900617724921068927[291] = 0;
   out_3900617724921068927[292] = 0;
   out_3900617724921068927[293] = 0;
   out_3900617724921068927[294] = 0;
   out_3900617724921068927[295] = 0;
   out_3900617724921068927[296] = 0;
   out_3900617724921068927[297] = 0;
   out_3900617724921068927[298] = 0;
   out_3900617724921068927[299] = 0;
   out_3900617724921068927[300] = 0;
   out_3900617724921068927[301] = 0;
   out_3900617724921068927[302] = 0;
   out_3900617724921068927[303] = 0;
   out_3900617724921068927[304] = 0;
   out_3900617724921068927[305] = 0;
   out_3900617724921068927[306] = 0;
   out_3900617724921068927[307] = 0;
   out_3900617724921068927[308] = 1;
   out_3900617724921068927[309] = 0;
   out_3900617724921068927[310] = 0;
   out_3900617724921068927[311] = 0;
   out_3900617724921068927[312] = 0;
   out_3900617724921068927[313] = 0;
   out_3900617724921068927[314] = 0;
   out_3900617724921068927[315] = 0;
   out_3900617724921068927[316] = 0;
   out_3900617724921068927[317] = 0;
   out_3900617724921068927[318] = 0;
   out_3900617724921068927[319] = 0;
   out_3900617724921068927[320] = 0;
   out_3900617724921068927[321] = 0;
   out_3900617724921068927[322] = 0;
   out_3900617724921068927[323] = 0;
   out_3900617724921068927[324] = 0;
   out_3900617724921068927[325] = 0;
   out_3900617724921068927[326] = 0;
   out_3900617724921068927[327] = 0;
   out_3900617724921068927[328] = 0;
   out_3900617724921068927[329] = 0;
   out_3900617724921068927[330] = 1;
   out_3900617724921068927[331] = 0;
   out_3900617724921068927[332] = 0;
   out_3900617724921068927[333] = 0;
   out_3900617724921068927[334] = 0;
   out_3900617724921068927[335] = 0;
   out_3900617724921068927[336] = 0;
   out_3900617724921068927[337] = 0;
   out_3900617724921068927[338] = 0;
   out_3900617724921068927[339] = 0;
   out_3900617724921068927[340] = 0;
   out_3900617724921068927[341] = 0;
   out_3900617724921068927[342] = 0;
   out_3900617724921068927[343] = 0;
   out_3900617724921068927[344] = 0;
   out_3900617724921068927[345] = 0;
   out_3900617724921068927[346] = 0;
   out_3900617724921068927[347] = 0;
   out_3900617724921068927[348] = 0;
   out_3900617724921068927[349] = 0;
   out_3900617724921068927[350] = 0;
   out_3900617724921068927[351] = 0;
   out_3900617724921068927[352] = 1;
   out_3900617724921068927[353] = 0;
   out_3900617724921068927[354] = 0;
   out_3900617724921068927[355] = 0;
   out_3900617724921068927[356] = 0;
   out_3900617724921068927[357] = 0;
   out_3900617724921068927[358] = 0;
   out_3900617724921068927[359] = 0;
   out_3900617724921068927[360] = 0;
   out_3900617724921068927[361] = 0;
   out_3900617724921068927[362] = 0;
   out_3900617724921068927[363] = 0;
   out_3900617724921068927[364] = 0;
   out_3900617724921068927[365] = 0;
   out_3900617724921068927[366] = 0;
   out_3900617724921068927[367] = 0;
   out_3900617724921068927[368] = 0;
   out_3900617724921068927[369] = 0;
   out_3900617724921068927[370] = 0;
   out_3900617724921068927[371] = 0;
   out_3900617724921068927[372] = 0;
   out_3900617724921068927[373] = 0;
   out_3900617724921068927[374] = 1;
   out_3900617724921068927[375] = 0;
   out_3900617724921068927[376] = 0;
   out_3900617724921068927[377] = 0;
   out_3900617724921068927[378] = 0;
   out_3900617724921068927[379] = 0;
   out_3900617724921068927[380] = 0;
   out_3900617724921068927[381] = 0;
   out_3900617724921068927[382] = 0;
   out_3900617724921068927[383] = 0;
   out_3900617724921068927[384] = 0;
   out_3900617724921068927[385] = 0;
   out_3900617724921068927[386] = 0;
   out_3900617724921068927[387] = 0;
   out_3900617724921068927[388] = 0;
   out_3900617724921068927[389] = 0;
   out_3900617724921068927[390] = 0;
   out_3900617724921068927[391] = 0;
   out_3900617724921068927[392] = 0;
   out_3900617724921068927[393] = 0;
   out_3900617724921068927[394] = 0;
   out_3900617724921068927[395] = 0;
   out_3900617724921068927[396] = 1;
   out_3900617724921068927[397] = 0;
   out_3900617724921068927[398] = 0;
   out_3900617724921068927[399] = 0;
   out_3900617724921068927[400] = 0;
   out_3900617724921068927[401] = 0;
   out_3900617724921068927[402] = 0;
   out_3900617724921068927[403] = 0;
   out_3900617724921068927[404] = 0;
   out_3900617724921068927[405] = 0;
   out_3900617724921068927[406] = 0;
   out_3900617724921068927[407] = 0;
   out_3900617724921068927[408] = 0;
   out_3900617724921068927[409] = 0;
   out_3900617724921068927[410] = 0;
   out_3900617724921068927[411] = 0;
   out_3900617724921068927[412] = 0;
   out_3900617724921068927[413] = 0;
   out_3900617724921068927[414] = 0;
   out_3900617724921068927[415] = 0;
   out_3900617724921068927[416] = 0;
   out_3900617724921068927[417] = 0;
   out_3900617724921068927[418] = 1;
   out_3900617724921068927[419] = 0;
   out_3900617724921068927[420] = 0;
   out_3900617724921068927[421] = 0;
   out_3900617724921068927[422] = 0;
   out_3900617724921068927[423] = 0;
   out_3900617724921068927[424] = 0;
   out_3900617724921068927[425] = 0;
   out_3900617724921068927[426] = 0;
   out_3900617724921068927[427] = 0;
   out_3900617724921068927[428] = 0;
   out_3900617724921068927[429] = 0;
   out_3900617724921068927[430] = 0;
   out_3900617724921068927[431] = 0;
   out_3900617724921068927[432] = 0;
   out_3900617724921068927[433] = 0;
   out_3900617724921068927[434] = 0;
   out_3900617724921068927[435] = 0;
   out_3900617724921068927[436] = 0;
   out_3900617724921068927[437] = 0;
   out_3900617724921068927[438] = 0;
   out_3900617724921068927[439] = 0;
   out_3900617724921068927[440] = 1;
}
void h_4(double *state, double *unused, double *out_5594199428645316670) {
   out_5594199428645316670[0] = state[10] + state[13];
   out_5594199428645316670[1] = state[11] + state[14];
   out_5594199428645316670[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2295401826439358034) {
   out_2295401826439358034[0] = 0;
   out_2295401826439358034[1] = 0;
   out_2295401826439358034[2] = 0;
   out_2295401826439358034[3] = 0;
   out_2295401826439358034[4] = 0;
   out_2295401826439358034[5] = 0;
   out_2295401826439358034[6] = 0;
   out_2295401826439358034[7] = 0;
   out_2295401826439358034[8] = 0;
   out_2295401826439358034[9] = 0;
   out_2295401826439358034[10] = 1;
   out_2295401826439358034[11] = 0;
   out_2295401826439358034[12] = 0;
   out_2295401826439358034[13] = 1;
   out_2295401826439358034[14] = 0;
   out_2295401826439358034[15] = 0;
   out_2295401826439358034[16] = 0;
   out_2295401826439358034[17] = 0;
   out_2295401826439358034[18] = 0;
   out_2295401826439358034[19] = 0;
   out_2295401826439358034[20] = 0;
   out_2295401826439358034[21] = 0;
   out_2295401826439358034[22] = 0;
   out_2295401826439358034[23] = 0;
   out_2295401826439358034[24] = 0;
   out_2295401826439358034[25] = 0;
   out_2295401826439358034[26] = 0;
   out_2295401826439358034[27] = 0;
   out_2295401826439358034[28] = 0;
   out_2295401826439358034[29] = 0;
   out_2295401826439358034[30] = 0;
   out_2295401826439358034[31] = 0;
   out_2295401826439358034[32] = 0;
   out_2295401826439358034[33] = 1;
   out_2295401826439358034[34] = 0;
   out_2295401826439358034[35] = 0;
   out_2295401826439358034[36] = 1;
   out_2295401826439358034[37] = 0;
   out_2295401826439358034[38] = 0;
   out_2295401826439358034[39] = 0;
   out_2295401826439358034[40] = 0;
   out_2295401826439358034[41] = 0;
   out_2295401826439358034[42] = 0;
   out_2295401826439358034[43] = 0;
   out_2295401826439358034[44] = 0;
   out_2295401826439358034[45] = 0;
   out_2295401826439358034[46] = 0;
   out_2295401826439358034[47] = 0;
   out_2295401826439358034[48] = 0;
   out_2295401826439358034[49] = 0;
   out_2295401826439358034[50] = 0;
   out_2295401826439358034[51] = 0;
   out_2295401826439358034[52] = 0;
   out_2295401826439358034[53] = 0;
   out_2295401826439358034[54] = 0;
   out_2295401826439358034[55] = 0;
   out_2295401826439358034[56] = 1;
   out_2295401826439358034[57] = 0;
   out_2295401826439358034[58] = 0;
   out_2295401826439358034[59] = 1;
   out_2295401826439358034[60] = 0;
   out_2295401826439358034[61] = 0;
   out_2295401826439358034[62] = 0;
   out_2295401826439358034[63] = 0;
   out_2295401826439358034[64] = 0;
   out_2295401826439358034[65] = 0;
}
void h_9(double *state, double *unused, double *out_6244923351303820998) {
   out_6244923351303820998[0] = state[10];
   out_6244923351303820998[1] = state[11];
   out_6244923351303820998[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2536591473068948679) {
   out_2536591473068948679[0] = 0;
   out_2536591473068948679[1] = 0;
   out_2536591473068948679[2] = 0;
   out_2536591473068948679[3] = 0;
   out_2536591473068948679[4] = 0;
   out_2536591473068948679[5] = 0;
   out_2536591473068948679[6] = 0;
   out_2536591473068948679[7] = 0;
   out_2536591473068948679[8] = 0;
   out_2536591473068948679[9] = 0;
   out_2536591473068948679[10] = 1;
   out_2536591473068948679[11] = 0;
   out_2536591473068948679[12] = 0;
   out_2536591473068948679[13] = 0;
   out_2536591473068948679[14] = 0;
   out_2536591473068948679[15] = 0;
   out_2536591473068948679[16] = 0;
   out_2536591473068948679[17] = 0;
   out_2536591473068948679[18] = 0;
   out_2536591473068948679[19] = 0;
   out_2536591473068948679[20] = 0;
   out_2536591473068948679[21] = 0;
   out_2536591473068948679[22] = 0;
   out_2536591473068948679[23] = 0;
   out_2536591473068948679[24] = 0;
   out_2536591473068948679[25] = 0;
   out_2536591473068948679[26] = 0;
   out_2536591473068948679[27] = 0;
   out_2536591473068948679[28] = 0;
   out_2536591473068948679[29] = 0;
   out_2536591473068948679[30] = 0;
   out_2536591473068948679[31] = 0;
   out_2536591473068948679[32] = 0;
   out_2536591473068948679[33] = 1;
   out_2536591473068948679[34] = 0;
   out_2536591473068948679[35] = 0;
   out_2536591473068948679[36] = 0;
   out_2536591473068948679[37] = 0;
   out_2536591473068948679[38] = 0;
   out_2536591473068948679[39] = 0;
   out_2536591473068948679[40] = 0;
   out_2536591473068948679[41] = 0;
   out_2536591473068948679[42] = 0;
   out_2536591473068948679[43] = 0;
   out_2536591473068948679[44] = 0;
   out_2536591473068948679[45] = 0;
   out_2536591473068948679[46] = 0;
   out_2536591473068948679[47] = 0;
   out_2536591473068948679[48] = 0;
   out_2536591473068948679[49] = 0;
   out_2536591473068948679[50] = 0;
   out_2536591473068948679[51] = 0;
   out_2536591473068948679[52] = 0;
   out_2536591473068948679[53] = 0;
   out_2536591473068948679[54] = 0;
   out_2536591473068948679[55] = 0;
   out_2536591473068948679[56] = 1;
   out_2536591473068948679[57] = 0;
   out_2536591473068948679[58] = 0;
   out_2536591473068948679[59] = 0;
   out_2536591473068948679[60] = 0;
   out_2536591473068948679[61] = 0;
   out_2536591473068948679[62] = 0;
   out_2536591473068948679[63] = 0;
   out_2536591473068948679[64] = 0;
   out_2536591473068948679[65] = 0;
}
void h_10(double *state, double *unused, double *out_6519334956050940943) {
   out_6519334956050940943[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6519334956050940943[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6519334956050940943[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_85009065529868653) {
   out_85009065529868653[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_85009065529868653[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_85009065529868653[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_85009065529868653[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_85009065529868653[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_85009065529868653[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_85009065529868653[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_85009065529868653[7] = 0;
   out_85009065529868653[8] = 0;
   out_85009065529868653[9] = 0;
   out_85009065529868653[10] = 0;
   out_85009065529868653[11] = 0;
   out_85009065529868653[12] = 0;
   out_85009065529868653[13] = 0;
   out_85009065529868653[14] = 0;
   out_85009065529868653[15] = 0;
   out_85009065529868653[16] = 1;
   out_85009065529868653[17] = 0;
   out_85009065529868653[18] = 0;
   out_85009065529868653[19] = 1;
   out_85009065529868653[20] = 0;
   out_85009065529868653[21] = 0;
   out_85009065529868653[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_85009065529868653[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_85009065529868653[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_85009065529868653[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_85009065529868653[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_85009065529868653[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_85009065529868653[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_85009065529868653[29] = 0;
   out_85009065529868653[30] = 0;
   out_85009065529868653[31] = 0;
   out_85009065529868653[32] = 0;
   out_85009065529868653[33] = 0;
   out_85009065529868653[34] = 0;
   out_85009065529868653[35] = 0;
   out_85009065529868653[36] = 0;
   out_85009065529868653[37] = 0;
   out_85009065529868653[38] = 0;
   out_85009065529868653[39] = 1;
   out_85009065529868653[40] = 0;
   out_85009065529868653[41] = 0;
   out_85009065529868653[42] = 1;
   out_85009065529868653[43] = 0;
   out_85009065529868653[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_85009065529868653[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_85009065529868653[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_85009065529868653[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_85009065529868653[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_85009065529868653[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_85009065529868653[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_85009065529868653[51] = 0;
   out_85009065529868653[52] = 0;
   out_85009065529868653[53] = 0;
   out_85009065529868653[54] = 0;
   out_85009065529868653[55] = 0;
   out_85009065529868653[56] = 0;
   out_85009065529868653[57] = 0;
   out_85009065529868653[58] = 0;
   out_85009065529868653[59] = 0;
   out_85009065529868653[60] = 0;
   out_85009065529868653[61] = 0;
   out_85009065529868653[62] = 1;
   out_85009065529868653[63] = 0;
   out_85009065529868653[64] = 0;
   out_85009065529868653[65] = 1;
}
void h_12(double *state, double *unused, double *out_5817048618006658828) {
   out_5817048618006658828[0] = state[0];
   out_5817048618006658828[1] = state[1];
   out_5817048618006658828[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7314858234471319829) {
   out_7314858234471319829[0] = 1;
   out_7314858234471319829[1] = 0;
   out_7314858234471319829[2] = 0;
   out_7314858234471319829[3] = 0;
   out_7314858234471319829[4] = 0;
   out_7314858234471319829[5] = 0;
   out_7314858234471319829[6] = 0;
   out_7314858234471319829[7] = 0;
   out_7314858234471319829[8] = 0;
   out_7314858234471319829[9] = 0;
   out_7314858234471319829[10] = 0;
   out_7314858234471319829[11] = 0;
   out_7314858234471319829[12] = 0;
   out_7314858234471319829[13] = 0;
   out_7314858234471319829[14] = 0;
   out_7314858234471319829[15] = 0;
   out_7314858234471319829[16] = 0;
   out_7314858234471319829[17] = 0;
   out_7314858234471319829[18] = 0;
   out_7314858234471319829[19] = 0;
   out_7314858234471319829[20] = 0;
   out_7314858234471319829[21] = 0;
   out_7314858234471319829[22] = 0;
   out_7314858234471319829[23] = 1;
   out_7314858234471319829[24] = 0;
   out_7314858234471319829[25] = 0;
   out_7314858234471319829[26] = 0;
   out_7314858234471319829[27] = 0;
   out_7314858234471319829[28] = 0;
   out_7314858234471319829[29] = 0;
   out_7314858234471319829[30] = 0;
   out_7314858234471319829[31] = 0;
   out_7314858234471319829[32] = 0;
   out_7314858234471319829[33] = 0;
   out_7314858234471319829[34] = 0;
   out_7314858234471319829[35] = 0;
   out_7314858234471319829[36] = 0;
   out_7314858234471319829[37] = 0;
   out_7314858234471319829[38] = 0;
   out_7314858234471319829[39] = 0;
   out_7314858234471319829[40] = 0;
   out_7314858234471319829[41] = 0;
   out_7314858234471319829[42] = 0;
   out_7314858234471319829[43] = 0;
   out_7314858234471319829[44] = 0;
   out_7314858234471319829[45] = 0;
   out_7314858234471319829[46] = 1;
   out_7314858234471319829[47] = 0;
   out_7314858234471319829[48] = 0;
   out_7314858234471319829[49] = 0;
   out_7314858234471319829[50] = 0;
   out_7314858234471319829[51] = 0;
   out_7314858234471319829[52] = 0;
   out_7314858234471319829[53] = 0;
   out_7314858234471319829[54] = 0;
   out_7314858234471319829[55] = 0;
   out_7314858234471319829[56] = 0;
   out_7314858234471319829[57] = 0;
   out_7314858234471319829[58] = 0;
   out_7314858234471319829[59] = 0;
   out_7314858234471319829[60] = 0;
   out_7314858234471319829[61] = 0;
   out_7314858234471319829[62] = 0;
   out_7314858234471319829[63] = 0;
   out_7314858234471319829[64] = 0;
   out_7314858234471319829[65] = 0;
}
void h_35(double *state, double *unused, double *out_2328325805861695636) {
   out_2328325805861695636[0] = state[7];
   out_2328325805861695636[1] = state[8];
   out_2328325805861695636[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8386322806913218078) {
   out_8386322806913218078[0] = 0;
   out_8386322806913218078[1] = 0;
   out_8386322806913218078[2] = 0;
   out_8386322806913218078[3] = 0;
   out_8386322806913218078[4] = 0;
   out_8386322806913218078[5] = 0;
   out_8386322806913218078[6] = 0;
   out_8386322806913218078[7] = 1;
   out_8386322806913218078[8] = 0;
   out_8386322806913218078[9] = 0;
   out_8386322806913218078[10] = 0;
   out_8386322806913218078[11] = 0;
   out_8386322806913218078[12] = 0;
   out_8386322806913218078[13] = 0;
   out_8386322806913218078[14] = 0;
   out_8386322806913218078[15] = 0;
   out_8386322806913218078[16] = 0;
   out_8386322806913218078[17] = 0;
   out_8386322806913218078[18] = 0;
   out_8386322806913218078[19] = 0;
   out_8386322806913218078[20] = 0;
   out_8386322806913218078[21] = 0;
   out_8386322806913218078[22] = 0;
   out_8386322806913218078[23] = 0;
   out_8386322806913218078[24] = 0;
   out_8386322806913218078[25] = 0;
   out_8386322806913218078[26] = 0;
   out_8386322806913218078[27] = 0;
   out_8386322806913218078[28] = 0;
   out_8386322806913218078[29] = 0;
   out_8386322806913218078[30] = 1;
   out_8386322806913218078[31] = 0;
   out_8386322806913218078[32] = 0;
   out_8386322806913218078[33] = 0;
   out_8386322806913218078[34] = 0;
   out_8386322806913218078[35] = 0;
   out_8386322806913218078[36] = 0;
   out_8386322806913218078[37] = 0;
   out_8386322806913218078[38] = 0;
   out_8386322806913218078[39] = 0;
   out_8386322806913218078[40] = 0;
   out_8386322806913218078[41] = 0;
   out_8386322806913218078[42] = 0;
   out_8386322806913218078[43] = 0;
   out_8386322806913218078[44] = 0;
   out_8386322806913218078[45] = 0;
   out_8386322806913218078[46] = 0;
   out_8386322806913218078[47] = 0;
   out_8386322806913218078[48] = 0;
   out_8386322806913218078[49] = 0;
   out_8386322806913218078[50] = 0;
   out_8386322806913218078[51] = 0;
   out_8386322806913218078[52] = 0;
   out_8386322806913218078[53] = 1;
   out_8386322806913218078[54] = 0;
   out_8386322806913218078[55] = 0;
   out_8386322806913218078[56] = 0;
   out_8386322806913218078[57] = 0;
   out_8386322806913218078[58] = 0;
   out_8386322806913218078[59] = 0;
   out_8386322806913218078[60] = 0;
   out_8386322806913218078[61] = 0;
   out_8386322806913218078[62] = 0;
   out_8386322806913218078[63] = 0;
   out_8386322806913218078[64] = 0;
   out_8386322806913218078[65] = 0;
}
void h_32(double *state, double *unused, double *out_2964925050445193380) {
   out_2964925050445193380[0] = state[3];
   out_2964925050445193380[1] = state[4];
   out_2964925050445193380[2] = state[5];
   out_2964925050445193380[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1443364646140056340) {
   out_1443364646140056340[0] = 0;
   out_1443364646140056340[1] = 0;
   out_1443364646140056340[2] = 0;
   out_1443364646140056340[3] = 1;
   out_1443364646140056340[4] = 0;
   out_1443364646140056340[5] = 0;
   out_1443364646140056340[6] = 0;
   out_1443364646140056340[7] = 0;
   out_1443364646140056340[8] = 0;
   out_1443364646140056340[9] = 0;
   out_1443364646140056340[10] = 0;
   out_1443364646140056340[11] = 0;
   out_1443364646140056340[12] = 0;
   out_1443364646140056340[13] = 0;
   out_1443364646140056340[14] = 0;
   out_1443364646140056340[15] = 0;
   out_1443364646140056340[16] = 0;
   out_1443364646140056340[17] = 0;
   out_1443364646140056340[18] = 0;
   out_1443364646140056340[19] = 0;
   out_1443364646140056340[20] = 0;
   out_1443364646140056340[21] = 0;
   out_1443364646140056340[22] = 0;
   out_1443364646140056340[23] = 0;
   out_1443364646140056340[24] = 0;
   out_1443364646140056340[25] = 0;
   out_1443364646140056340[26] = 1;
   out_1443364646140056340[27] = 0;
   out_1443364646140056340[28] = 0;
   out_1443364646140056340[29] = 0;
   out_1443364646140056340[30] = 0;
   out_1443364646140056340[31] = 0;
   out_1443364646140056340[32] = 0;
   out_1443364646140056340[33] = 0;
   out_1443364646140056340[34] = 0;
   out_1443364646140056340[35] = 0;
   out_1443364646140056340[36] = 0;
   out_1443364646140056340[37] = 0;
   out_1443364646140056340[38] = 0;
   out_1443364646140056340[39] = 0;
   out_1443364646140056340[40] = 0;
   out_1443364646140056340[41] = 0;
   out_1443364646140056340[42] = 0;
   out_1443364646140056340[43] = 0;
   out_1443364646140056340[44] = 0;
   out_1443364646140056340[45] = 0;
   out_1443364646140056340[46] = 0;
   out_1443364646140056340[47] = 0;
   out_1443364646140056340[48] = 0;
   out_1443364646140056340[49] = 1;
   out_1443364646140056340[50] = 0;
   out_1443364646140056340[51] = 0;
   out_1443364646140056340[52] = 0;
   out_1443364646140056340[53] = 0;
   out_1443364646140056340[54] = 0;
   out_1443364646140056340[55] = 0;
   out_1443364646140056340[56] = 0;
   out_1443364646140056340[57] = 0;
   out_1443364646140056340[58] = 0;
   out_1443364646140056340[59] = 0;
   out_1443364646140056340[60] = 0;
   out_1443364646140056340[61] = 0;
   out_1443364646140056340[62] = 0;
   out_1443364646140056340[63] = 0;
   out_1443364646140056340[64] = 0;
   out_1443364646140056340[65] = 0;
   out_1443364646140056340[66] = 0;
   out_1443364646140056340[67] = 0;
   out_1443364646140056340[68] = 0;
   out_1443364646140056340[69] = 0;
   out_1443364646140056340[70] = 0;
   out_1443364646140056340[71] = 0;
   out_1443364646140056340[72] = 1;
   out_1443364646140056340[73] = 0;
   out_1443364646140056340[74] = 0;
   out_1443364646140056340[75] = 0;
   out_1443364646140056340[76] = 0;
   out_1443364646140056340[77] = 0;
   out_1443364646140056340[78] = 0;
   out_1443364646140056340[79] = 0;
   out_1443364646140056340[80] = 0;
   out_1443364646140056340[81] = 0;
   out_1443364646140056340[82] = 0;
   out_1443364646140056340[83] = 0;
   out_1443364646140056340[84] = 0;
   out_1443364646140056340[85] = 0;
   out_1443364646140056340[86] = 0;
   out_1443364646140056340[87] = 0;
}
void h_13(double *state, double *unused, double *out_6804217202458125360) {
   out_6804217202458125360[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6804217202458125360[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6804217202458125360[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6244979346460613005) {
   out_6244979346460613005[0] = 0;
   out_6244979346460613005[1] = 0;
   out_6244979346460613005[2] = 0;
   out_6244979346460613005[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6244979346460613005[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6244979346460613005[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6244979346460613005[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6244979346460613005[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6244979346460613005[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6244979346460613005[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6244979346460613005[10] = 0;
   out_6244979346460613005[11] = 0;
   out_6244979346460613005[12] = 0;
   out_6244979346460613005[13] = 0;
   out_6244979346460613005[14] = 0;
   out_6244979346460613005[15] = 0;
   out_6244979346460613005[16] = 0;
   out_6244979346460613005[17] = 0;
   out_6244979346460613005[18] = 0;
   out_6244979346460613005[19] = 0;
   out_6244979346460613005[20] = 0;
   out_6244979346460613005[21] = 0;
   out_6244979346460613005[22] = 0;
   out_6244979346460613005[23] = 0;
   out_6244979346460613005[24] = 0;
   out_6244979346460613005[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6244979346460613005[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6244979346460613005[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6244979346460613005[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6244979346460613005[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6244979346460613005[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6244979346460613005[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6244979346460613005[32] = 0;
   out_6244979346460613005[33] = 0;
   out_6244979346460613005[34] = 0;
   out_6244979346460613005[35] = 0;
   out_6244979346460613005[36] = 0;
   out_6244979346460613005[37] = 0;
   out_6244979346460613005[38] = 0;
   out_6244979346460613005[39] = 0;
   out_6244979346460613005[40] = 0;
   out_6244979346460613005[41] = 0;
   out_6244979346460613005[42] = 0;
   out_6244979346460613005[43] = 0;
   out_6244979346460613005[44] = 0;
   out_6244979346460613005[45] = 0;
   out_6244979346460613005[46] = 0;
   out_6244979346460613005[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6244979346460613005[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6244979346460613005[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6244979346460613005[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6244979346460613005[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6244979346460613005[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6244979346460613005[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6244979346460613005[54] = 0;
   out_6244979346460613005[55] = 0;
   out_6244979346460613005[56] = 0;
   out_6244979346460613005[57] = 0;
   out_6244979346460613005[58] = 0;
   out_6244979346460613005[59] = 0;
   out_6244979346460613005[60] = 0;
   out_6244979346460613005[61] = 0;
   out_6244979346460613005[62] = 0;
   out_6244979346460613005[63] = 0;
   out_6244979346460613005[64] = 0;
   out_6244979346460613005[65] = 0;
}
void h_14(double *state, double *unused, double *out_6244923351303820998) {
   out_6244923351303820998[0] = state[10];
   out_6244923351303820998[1] = state[11];
   out_6244923351303820998[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2536591473068948679) {
   out_2536591473068948679[0] = 0;
   out_2536591473068948679[1] = 0;
   out_2536591473068948679[2] = 0;
   out_2536591473068948679[3] = 0;
   out_2536591473068948679[4] = 0;
   out_2536591473068948679[5] = 0;
   out_2536591473068948679[6] = 0;
   out_2536591473068948679[7] = 0;
   out_2536591473068948679[8] = 0;
   out_2536591473068948679[9] = 0;
   out_2536591473068948679[10] = 1;
   out_2536591473068948679[11] = 0;
   out_2536591473068948679[12] = 0;
   out_2536591473068948679[13] = 0;
   out_2536591473068948679[14] = 0;
   out_2536591473068948679[15] = 0;
   out_2536591473068948679[16] = 0;
   out_2536591473068948679[17] = 0;
   out_2536591473068948679[18] = 0;
   out_2536591473068948679[19] = 0;
   out_2536591473068948679[20] = 0;
   out_2536591473068948679[21] = 0;
   out_2536591473068948679[22] = 0;
   out_2536591473068948679[23] = 0;
   out_2536591473068948679[24] = 0;
   out_2536591473068948679[25] = 0;
   out_2536591473068948679[26] = 0;
   out_2536591473068948679[27] = 0;
   out_2536591473068948679[28] = 0;
   out_2536591473068948679[29] = 0;
   out_2536591473068948679[30] = 0;
   out_2536591473068948679[31] = 0;
   out_2536591473068948679[32] = 0;
   out_2536591473068948679[33] = 1;
   out_2536591473068948679[34] = 0;
   out_2536591473068948679[35] = 0;
   out_2536591473068948679[36] = 0;
   out_2536591473068948679[37] = 0;
   out_2536591473068948679[38] = 0;
   out_2536591473068948679[39] = 0;
   out_2536591473068948679[40] = 0;
   out_2536591473068948679[41] = 0;
   out_2536591473068948679[42] = 0;
   out_2536591473068948679[43] = 0;
   out_2536591473068948679[44] = 0;
   out_2536591473068948679[45] = 0;
   out_2536591473068948679[46] = 0;
   out_2536591473068948679[47] = 0;
   out_2536591473068948679[48] = 0;
   out_2536591473068948679[49] = 0;
   out_2536591473068948679[50] = 0;
   out_2536591473068948679[51] = 0;
   out_2536591473068948679[52] = 0;
   out_2536591473068948679[53] = 0;
   out_2536591473068948679[54] = 0;
   out_2536591473068948679[55] = 0;
   out_2536591473068948679[56] = 1;
   out_2536591473068948679[57] = 0;
   out_2536591473068948679[58] = 0;
   out_2536591473068948679[59] = 0;
   out_2536591473068948679[60] = 0;
   out_2536591473068948679[61] = 0;
   out_2536591473068948679[62] = 0;
   out_2536591473068948679[63] = 0;
   out_2536591473068948679[64] = 0;
   out_2536591473068948679[65] = 0;
}
void h_33(double *state, double *unused, double *out_1151613323620641099) {
   out_1151613323620641099[0] = state[16];
   out_1151613323620641099[1] = state[17];
   out_1151613323620641099[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8812620888450823014) {
   out_8812620888450823014[0] = 0;
   out_8812620888450823014[1] = 0;
   out_8812620888450823014[2] = 0;
   out_8812620888450823014[3] = 0;
   out_8812620888450823014[4] = 0;
   out_8812620888450823014[5] = 0;
   out_8812620888450823014[6] = 0;
   out_8812620888450823014[7] = 0;
   out_8812620888450823014[8] = 0;
   out_8812620888450823014[9] = 0;
   out_8812620888450823014[10] = 0;
   out_8812620888450823014[11] = 0;
   out_8812620888450823014[12] = 0;
   out_8812620888450823014[13] = 0;
   out_8812620888450823014[14] = 0;
   out_8812620888450823014[15] = 0;
   out_8812620888450823014[16] = 1;
   out_8812620888450823014[17] = 0;
   out_8812620888450823014[18] = 0;
   out_8812620888450823014[19] = 0;
   out_8812620888450823014[20] = 0;
   out_8812620888450823014[21] = 0;
   out_8812620888450823014[22] = 0;
   out_8812620888450823014[23] = 0;
   out_8812620888450823014[24] = 0;
   out_8812620888450823014[25] = 0;
   out_8812620888450823014[26] = 0;
   out_8812620888450823014[27] = 0;
   out_8812620888450823014[28] = 0;
   out_8812620888450823014[29] = 0;
   out_8812620888450823014[30] = 0;
   out_8812620888450823014[31] = 0;
   out_8812620888450823014[32] = 0;
   out_8812620888450823014[33] = 0;
   out_8812620888450823014[34] = 0;
   out_8812620888450823014[35] = 0;
   out_8812620888450823014[36] = 0;
   out_8812620888450823014[37] = 0;
   out_8812620888450823014[38] = 0;
   out_8812620888450823014[39] = 1;
   out_8812620888450823014[40] = 0;
   out_8812620888450823014[41] = 0;
   out_8812620888450823014[42] = 0;
   out_8812620888450823014[43] = 0;
   out_8812620888450823014[44] = 0;
   out_8812620888450823014[45] = 0;
   out_8812620888450823014[46] = 0;
   out_8812620888450823014[47] = 0;
   out_8812620888450823014[48] = 0;
   out_8812620888450823014[49] = 0;
   out_8812620888450823014[50] = 0;
   out_8812620888450823014[51] = 0;
   out_8812620888450823014[52] = 0;
   out_8812620888450823014[53] = 0;
   out_8812620888450823014[54] = 0;
   out_8812620888450823014[55] = 0;
   out_8812620888450823014[56] = 0;
   out_8812620888450823014[57] = 0;
   out_8812620888450823014[58] = 0;
   out_8812620888450823014[59] = 0;
   out_8812620888450823014[60] = 0;
   out_8812620888450823014[61] = 0;
   out_8812620888450823014[62] = 1;
   out_8812620888450823014[63] = 0;
   out_8812620888450823014[64] = 0;
   out_8812620888450823014[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_11550028942566401) {
  H(in_vec, out_11550028942566401);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9184767064344944388) {
  err_fun(nom_x, delta_x, out_9184767064344944388);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6119341299857655338) {
  inv_err_fun(nom_x, true_x, out_6119341299857655338);
}
void live_H_mod_fun(double *state, double *out_2423349688366534848) {
  H_mod_fun(state, out_2423349688366534848);
}
void live_f_fun(double *state, double dt, double *out_3286974643845487244) {
  f_fun(state,  dt, out_3286974643845487244);
}
void live_F_fun(double *state, double dt, double *out_3900617724921068927) {
  F_fun(state,  dt, out_3900617724921068927);
}
void live_h_4(double *state, double *unused, double *out_5594199428645316670) {
  h_4(state, unused, out_5594199428645316670);
}
void live_H_4(double *state, double *unused, double *out_2295401826439358034) {
  H_4(state, unused, out_2295401826439358034);
}
void live_h_9(double *state, double *unused, double *out_6244923351303820998) {
  h_9(state, unused, out_6244923351303820998);
}
void live_H_9(double *state, double *unused, double *out_2536591473068948679) {
  H_9(state, unused, out_2536591473068948679);
}
void live_h_10(double *state, double *unused, double *out_6519334956050940943) {
  h_10(state, unused, out_6519334956050940943);
}
void live_H_10(double *state, double *unused, double *out_85009065529868653) {
  H_10(state, unused, out_85009065529868653);
}
void live_h_12(double *state, double *unused, double *out_5817048618006658828) {
  h_12(state, unused, out_5817048618006658828);
}
void live_H_12(double *state, double *unused, double *out_7314858234471319829) {
  H_12(state, unused, out_7314858234471319829);
}
void live_h_35(double *state, double *unused, double *out_2328325805861695636) {
  h_35(state, unused, out_2328325805861695636);
}
void live_H_35(double *state, double *unused, double *out_8386322806913218078) {
  H_35(state, unused, out_8386322806913218078);
}
void live_h_32(double *state, double *unused, double *out_2964925050445193380) {
  h_32(state, unused, out_2964925050445193380);
}
void live_H_32(double *state, double *unused, double *out_1443364646140056340) {
  H_32(state, unused, out_1443364646140056340);
}
void live_h_13(double *state, double *unused, double *out_6804217202458125360) {
  h_13(state, unused, out_6804217202458125360);
}
void live_H_13(double *state, double *unused, double *out_6244979346460613005) {
  H_13(state, unused, out_6244979346460613005);
}
void live_h_14(double *state, double *unused, double *out_6244923351303820998) {
  h_14(state, unused, out_6244923351303820998);
}
void live_H_14(double *state, double *unused, double *out_2536591473068948679) {
  H_14(state, unused, out_2536591473068948679);
}
void live_h_33(double *state, double *unused, double *out_1151613323620641099) {
  h_33(state, unused, out_1151613323620641099);
}
void live_H_33(double *state, double *unused, double *out_8812620888450823014) {
  H_33(state, unused, out_8812620888450823014);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
